name: Deploy Javaweb
on:
  push:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup jdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: build project
        run: gradle clean build --no-daemon

      - name: aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: login to aws
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        run: |
          docker build -t javaweb:latest .
          docker tag javaweb:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: push to ecr docker
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
          
      


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Generate Dockerrun.aws.json
        run: |
          echo '{
                      "AWSEBDockerrunVersion": "1",
                      "Image": {
                        "Name": "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest",
                        "Update": "true"
                      },
                      "Ports": [
                        {
                          "ContainerPort": "80"
                        }
                      ]
                    }' > Dockerrun.aws.json

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APP_NAME }}
          environment_name: ${{ secrets.EB_ENV_NAME }}
          version_label: v-${{ github.run_id }}
          region: ${{ secrets.AWS_REGION }}
          bucket_name: ${{ secrets.S3_BUCKET }}
          file: Dockerrun.aws.json

      - name: Wait for deployment to complete
        run: |
          eb status ${{ secrets.EB_ENV_NAME }} --region ${{ secrets.AWS_REGION }}
